name: App Tests
on:
  workflow_dispatch:
    inputs:
      recordVideo:
        description: 'Record E2E Tests'
        required: true
        default: 'false'
  push:
    branches: main
  pull_request:
defaults:
  run:
    shell: bash
jobs:
  generate:
    name: e2e-${{ matrix.app_type }}
    runs-on: macos-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]') && !contains(github.event.ref_type, '[tag]')"
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        node_version: [16.x]
        app_type:
          - WebRtcDemo
        include:
          - app_type: WebRtcDemo
    env:
      SCRIPT_DIR: ./test/scripts
    steps:
      - name: 'SETUP: Checkout'
        uses: actions/checkout@v3
      - name: 'SETUP: History'
        run: git --no-pager log -n 10 --graph --pretty='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue) <%an>%Creset' --abbrev-commit
      - name: 'SETUP: Node'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
      - name: 'SETUP: Java'
        uses: actions/setup-java@v3
        with:
          java-version: '8.x'
          distribution: 'temurin'
      - name: 'SETUP: Cache Maven archetypes'
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: 'SETUP: npm install and link in library'
        run: |
          npm ci
          npm link
      - name: 'SETUP: Generate Expo App'
        run: $SCRIPT_DIR/generate-app.sh
      - name: 'SETUP: Clone Kite'
        run: $SCRIPT_DIR/clone-kite.sh
      - name: 'SETUP: Config Git'
        run: $SCRIPT_DIR/git-config.sh
      - name: 'SETUP: Install Browsers and Drivers'
        run: $SCRIPT_DIR/install-kite.sh
        env:
          KITE_HOME: ${{ runner.workspace }}/KITE
          KITE_SCRIPT_DIR: ${{ runner.workspace }}/KITE/scripts/mac
      - name: 'PRE-TEST: Display Tools'
        run: $SCRIPT_DIR/display-tools.sh
      - name: 'TEST: Start Grid'
        run: $SCRIPT_DIR/start-kite.sh
        env:
          KITE_HOME: ${{ runner.workspace }}/KITE
          KITE_SCRIPT_DIR: ${{ runner.workspace }}/KITE/scripts/mac
      - name: 'TEST: Run Kite Tests'
        run: $SCRIPT_DIR/run-kite.sh
        env:
          KITE_HOME: ${{ runner.workspace }}/KITE
          KITE_SCRIPT_DIR: ${{ runner.workspace }}/KITE/scripts/mac
      - name: 'POST-TEST: Generate Kite Report'
        run: $SCRIPT_DIR/generate-kite-report.sh
        if: ${{ always() }}
        env:
          KITE_HOME: ${{ runner.workspace }}/KITE
          KITE_SCRIPT_DIR: ${{ runner.workspace }}/KITE/scripts/mac
      - name: 'POST-TEST: Upload Artifacts'
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: kite-artifacts-${{ matrix.app_type }}
          path: |
            ${{ runner.workspace }}/WebRtcDemo
            !${{ runner.workspace }}/WebRtcDemo/node_modules
            !${{ runner.workspace }}/WebRtcDemo/.expo
            ${{ runner.workspace }}/KITE/KITE-Example-Test
            !${{ runner.workspace }}/KITE/KITE-Example-Test/target
            !${{ runner.workspace }}/KITE/KITE-Example-Test/js/node_modules
      - name: 'POST-TEST: Update Github Pages with Kite Report'
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          GITHUB_TOKEN: ${{ secrets.RUDDELL_GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: test/kite/allure-report # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch
